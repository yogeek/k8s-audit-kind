---
# Full configuration available at : https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml

# Logs
# https://docs.traefik.io/observability/logs/
logs:
  # Traefik logs concern everything that happens to Traefik itself (startup, configuration, events, shutdown, and so on).
  general:
    # By default, the logs use a text format (common), but you can
    # also ask for the json format in the format option
    # format: json
    # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
    level: ERROR
  access:
    # To enable access logs
    enabled: true
    # Fields
    # https://docs.traefik.io/observability/access-logs/#limiting-the-fieldsincluding-headers
    fields:
      general:
        defaultmode: keep
        names: {}
          # Examples:
          # ClientUsername: drop
      headers:
        defaultmode: keep
        names: {}
          # Examples:
          # User-Agent: redact
          # Authorization: drop
          # Content-Type: keep

# Additional arguments to be passed at Traefik's binary
# All available options available on https://docs.traefik.io/reference/static-configuration/cli

# We choose to separate Traefik access logs from the Traefik container logs
# Format=JSON : WARNING: with this format, the "traefik" filebeat module will not work
#               => a JSON filter should be used instead
additionalArguments:
  - "--accesslog.filepath=/var/log/traefik/access.log"
  - "--accesslog.format=json"


deployment:
  additionalVolumes:
    - name: traefik-logs
      hostPath:
        # We mount traefik access logs as a path on the host in order to be readable by filebeat
        # (filebeat must also mount this directory to access to the log file on his side)
        path: /var/log/traefik
        type: DirectoryOrCreate

# Additional volumeMounts to add to the Traefik container
additionalVolumeMounts:
  # Will be used by filebeat to read access logs
  - name: traefik-logs
    mountPath: /var/log/traefik

# Use ingressClass. Ignored if Traefik version < 2.3 / kubernetes < 1.18.x
ingressClass:
  enabled: true
  isDefaultClass: false

# ----------- Dashboard config : create an ingressRoute for Traefik Dashboard
ingressRoute:
  dashboard:
    enabled: true

# Configure ports
ports:
  # Expose Traefik dashboard (do not keep this in production)
  traefik:
    port: 9000
    expose: true
    exposedPort: 9000
    protocol: TCP